name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
    # FIXME: if the speed become problem, better to create original image.
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build valgrind clang-format

    - name: Check format for changed lines
      run: |
        git fetch origin &&
        git diff -U0 origin/${{ github.event.pull_request.base.ref }} | clang-format-diff -p1 -style=LLVM | tee /dev/stderr | grep + && exit 1 || echo format ok

  unittests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build

    - name: Run unit tests with -werror
      run: |
        cmake -GNinja -Bbuild -DCMAKE_BUILD_TYPE=Debug -DENABLE_WERROR=ON
        ninja -Cbuild unittests

  asmtest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm cmake ninja-build

    - name: Build
      run: |
        cmake -GNinja -Bbuild -DSANITIZE=ON -DCMAKE_BUILD_TYPE=Debug
        ninja -Cbuild

    - name: Assemble Test
      run: |
        ninja -Cbuild asmtest

  riscv-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm cmake ninja-build

    - name: Build and Run riscv-tests
      run: |
        cmake -GNinja -Bbuild -DSANITIZE=ON -DCMAKE_BUILD_TYPE=Debug
        ninja -Cbuild riscvtests
        ninja -Cbuild rip-riscvtests

  dhrystone:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm cmake ninja-build

    - name: Build and Run dhrystone
      run: |
        cmake -GNinja -Bbuild -DCMAKE_BUILD_TYPE=Debug
        ninja -Cbuild dhrystone
        ninja -Cbuild rip-dhrystone

  python-wrapper:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm cmake ninja-build
        python3 -m pip install pytest

    - name: Build and Run pytest dhrystone
      run: |
        cmake -GNinja -Bbuild -DCMAKE_BUILD_TYPE=Debug
        ninja -Cbuild pytest

    # FIXME: valgrind with clnag-14 seems like few problems exist.
    # https://github.com/google/sanitizers/issues/856
    # https://hg.mozilla.org/integration/autoland/rev/192810f500b5
    # - name: Run valgrind
    #   run: valgrind --leak-check=full --error-exitcode=1 build/asmkheiv tests/addi.s
